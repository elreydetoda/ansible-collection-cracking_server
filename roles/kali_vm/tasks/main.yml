---
# tasks file for kali_vm
# all done for root user, because PCI passthrough

- name: ensure kali vm directory exists
  ansible.builtin.file:
    path: '{{ item }}/'
    state: directory
    owner: "root"
    group: "root"
    mode: "0600"
  loop:
    - '{{ kali_vm_dir }}'
  become: '{{ for_root_user }}'

- name: copying Vagrantfile over
  ansible.builtin.template:
    backup: true
    src: '{{ kali_vm_template }}'
    dest: '{{ kali_vm_dir }}/Vagrantfile'
  become: '{{ for_root_user }}'

- name: pulling/updating box ( this will take a while )
  ansible.builtin.command:
    cmd: vagrant box update --machine-readable --no-tty
    chdir: '{{ kali_vm_dir }}'
  become: '{{ for_root_user }}'
  register: result
  when: always_update
  changed_when: 
    - '"is running the latest version" not in result.stdout'
    - result.rc == 0

- name: starting up first time/pulling box ( this will take a while )
  ansible.builtin.command:
    cmd: vagrant up --machine-readable --no-tty
    chdir: '{{ kali_vm_dir }}'
  become: '{{ for_root_user }}'
  register: result
  changed_when: 
    - '"Creating image" in result.stdout'
    - result.rc == 0

- name: provisioning vm
  ansible.builtin.command:
    cmd: vagrant provision --provision-with initial-prov --machine-readable --no-tty
    chdir: '{{ kali_vm_dir }}'
  become: '{{ for_root_user }}'
  register: result
  changed_when: 
    - '"Exiting, already connected" not in result.stdout'
    - result.rc == 0
